name: xp-production
run-name: Deploy XP Production
on: workflow_dispatch
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .env file
        run: |
          rm .env
          touch .env

          echo "API_KEY=${{ secrets.API_KEY }}" >> .env
          echo "API_URL=${{ secrets.API_URL }}" >> .env
          echo "MODE=dev" >> .env
          echo "PORT=3000" >> .env

          echo "POSTGRES_URL=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:${{ secrets.POSTGRES_PORT }}/${{ secrets.POSTGRES_DB }}?schema=public" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env

          echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> .env
          echo "ADMIN_BOT_TOKEN=${{ secrets.ADMIN_BOT_TOKEN }}" >> .env
          echo "ADMIN_USER_ID=${{ secrets.ADMIN_USER_ID }}" >> .env

          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env

          cp .env ./xp-api
          cp .env ./bot

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts

      - name: Set up Docker context
        run: |
          docker context create xp-server --docker "host=ssh://${{secrets.VPS_USERNAME}}@${{secrets.VPS_IP}}"
          docker context use xp-server

      - name: Compose production docker
        run: docker --context xp-server compose --env-file .env -f docker-compose.prod.yml up --build -d --force-recreate
